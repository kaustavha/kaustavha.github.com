{"ast":null,"code":"async function fetchAPI(query, {\n  variables\n} = {}) {\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/graphql`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.error(json.errors);\n    throw new Error('Failed to fetch API');\n  }\n\n  return json.data;\n}\n\nexport async function getArticles() {\n  const data = await fetchAPI(`query Articles {\n    articles {\n      id\n      title\n      category {\n        id\n        name\n      }\n      image {\n        url\n        alternativeText\n      }\n    }\n  }`);\n  return data.articles;\n}\nexport async function getArticle(id) {\n  const data = await fetchAPI(`query Articles($id: ID!) {\n    article(id: $id) {\n      id\n      title\n      content\n      image {\n        url\n        alternativeText\n      }\n      category {\n        id\n        name\n      }\n      published_at\n    }\n  }`, {\n    variables: {\n      id\n    }\n  });\n  return data.article;\n}\nexport async function getCategories() {\n  const data = await fetchAPI(`query Categories {\n    categories {\n      id\n      name\n    }\n  }`);\n  return data.categories;\n}\nexport async function getCategory(id) {\n  const data = await fetchAPI(`query Category($id: ID!) {\n    category(id: $id) {\n      id\n      name\n      articles {\n        id\n        title\n        content\n        image {\n          url\n          alternativeText\n        }\n        category {\n          id\n          name\n        }\n      }\n    }\n  }\n`, {\n    variables: {\n      id\n    }\n  });\n  return data.category;\n}","map":null,"metadata":{},"sourceType":"module"}