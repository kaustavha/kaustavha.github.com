{
  "source": "doc/api/buffer.markdown",
  "modules": [
    {
      "textRaw": "Buffer",
      "name": "buffer",
      "desc": "<p>A mutable buffer using ffi for luvit.\n\n</p>\n<p><code>buffer = require(&#39;buffer&#39;)</code>\n\n</p>\n",
      "classes": [
        {
          "textRaw": "Class: buffer.Buffer",
          "type": "class",
          "name": "buffer.Buffer",
          "desc": "<p>Main buffer class\n\n</p>\n",
          "methods": [
            {
              "textRaw": "Buffer:inspect()",
              "type": "method",
              "name": "Buffer:inspect",
              "desc": "<p>Inspect a buffer. Returns a string of hexes like <Buffer Hexes>\n\n</p>\n",
              "signatures": [
                {
                  "params": []
                }
              ]
            },
            {
              "textRaw": "Buffer:readUInt8(offset)",
              "type": "method",
              "name": "Buffer:readUInt8",
              "desc": "<p>Reads unsigned 8 bit int at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readInt8(offset)",
              "type": "method",
              "name": "Buffer:readInt8",
              "desc": "<p>Read 8 bit int at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readUInt16LE(offset)",
              "type": "method",
              "name": "Buffer:readUInt16LE",
              "desc": "<p>Read a unsigned 16 bit integer in little endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readUInt16BE(offset)",
              "type": "method",
              "name": "Buffer:readUInt16BE",
              "desc": "<p>Read a unsigned 16 bit integer in big endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readInt16LE(offset)",
              "type": "method",
              "name": "Buffer:readInt16LE",
              "desc": "<p>Read a signed 16 bit integer in little endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readInt16BE(offset)",
              "type": "method",
              "name": "Buffer:readInt16BE",
              "desc": "<p>Read a signed 16 bit integer in big endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readUInt32LE(offset)",
              "type": "method",
              "name": "Buffer:readUInt32LE",
              "desc": "<p>Read a unsigned 32 bit integer in little endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readInt32LE(offset)",
              "type": "method",
              "name": "Buffer:readInt32LE",
              "desc": "<p>Read a signed 32 bit integer in little endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:readInt32BE(offset)",
              "type": "method",
              "name": "Buffer:readInt32BE",
              "desc": "<p>Read a signed 32 bit integer in big endian at offset\n\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "offset"
                    }
                  ]
                }
              ]
            },
            {
              "textRaw": "Buffer:toString([i, j])",
              "type": "method",
              "name": "Buffer:toString",
              "desc": "<p>Stringify the buffer from the ith to the jth position, or the whole thing if i and j arent specified\n</p>\n",
              "signatures": [
                {
                  "params": [
                    {
                      "name": "i"
                    },
                    {
                      "name": "j",
                      "optional": true
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "type": "module",
      "displayName": "Buffer"
    }
  ]
}
